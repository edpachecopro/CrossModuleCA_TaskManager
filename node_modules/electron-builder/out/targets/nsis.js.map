{
  "version": 3,
  "file": "nsis.js",
  "sourceRoot": "",
  "sources": [
    "../../src/targets/nsis.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import { WinPackager } from \"../winPackager\"\nimport { Arch, NsisOptions, FileAssociation } from \"../metadata\"\nimport { exec, debug, doSpawn, handleProcess, use, asArray } from \"../util/util\"\nimport * as path from \"path\"\nimport { Promise as BluebirdPromise } from \"bluebird\"\nimport { getBinFromBintray } from \"../util/binDownload\"\nimport { v5 as uuid5 } from \"uuid-1345\"\nimport { Target } from \"../platformPackager\"\nimport { archiveApp } from \"./archive\"\nimport { subTask, task, log } from \"../util/log\"\nimport { unlink, readFile } from \"fs-extra-p\"\nimport semver = require(\"semver\")\n\n//noinspection JSUnusedLocalSymbols\nconst __awaiter = require(\"../util/awaiter\")\n\nconst NSIS_VERSION = \"3.0.1\"\n//noinspection SpellCheckingInspection\nconst NSIS_SHA2 = \"23280f66c07c923da6f29a3c318377720c8ecd7af4de3755256d1ecf60d07f74\"\n\n//noinspection SpellCheckingInspection\nconst ELECTRON_BUILDER_NS_UUID = \"50e065bc-3134-11e6-9bab-38c9862bdaf3\"\n\nconst nsisPathPromise = getBinFromBintray(\"nsis\", NSIS_VERSION, NSIS_SHA2)\n\nexport default class NsisTarget extends Target {\n  private readonly options: NsisOptions\n\n  private archs: Map<Arch, Promise<string>> = new Map()\n\n  private readonly nsisTemplatesDir = path.join(__dirname, \"..\", \"..\", \"templates\", \"nsis\")\n\n  private readonly fileAssociations: Array<FileAssociation>\n\n  constructor(private packager: WinPackager, private outDir: string) {\n    super(\"nsis\")\n\n    this.options = packager.info.devMetadata.build.nsis || Object.create(null)\n\n    // CFBundleTypeName\n    // https://developer.apple.com/library/ios/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html#//apple_ref/doc/uid/20001431-101685\n    // CFBundleTypeExtensions\n    this.fileAssociations = asArray(packager.devMetadata.build.fileAssociations).concat(asArray(packager.platformSpecificBuildOptions.fileAssociations))\n  }\n\n  async build(arch: Arch, appOutDir: string) {\n    const packager = this.packager\n    const archSuffix = Arch[arch]\n    const archiveFile = path.join(this.outDir, `${packager.appInfo.name}-${packager.appInfo.version}-${archSuffix}.nsis.7z`)\n    this.archs.set(arch, task(`Creating NSIS ${archSuffix} package`, archiveApp(packager.devMetadata.build.compression, \"7z\", archiveFile, appOutDir, true)))\n  }\n\n  finishBuild(): Promise<any> {\n    return task(\"Building NSIS installer\", this.buildInstaller()\n      .then(() => BluebirdPromise.map(this.archs.values(), it => unlink(it))))\n  }\n\n  private async buildInstaller(): Promise<any> {\n    const packager = this.packager\n\n    const iconPath = await packager.getIconPath()\n    const appInfo = packager.appInfo\n    const version = appInfo.version\n\n    const installerPath = path.join(this.outDir, `${appInfo.productFilename} Setup ${version}.exe`)\n    const guid = this.options.guid || await BluebirdPromise.promisify(uuid5)({namespace: ELECTRON_BUILDER_NS_UUID, name: appInfo.id})\n    const defines: any = {\n      APP_ID: appInfo.id,\n      APP_GUID: guid,\n      PRODUCT_NAME: appInfo.productName,\n      PRODUCT_FILENAME: appInfo.productFilename,\n      APP_DESCRIPTION: appInfo.description,\n      VERSION: version,\n\n      MUI_ICON: iconPath,\n      MUI_UNICON: iconPath,\n\n      COMPANY_NAME: appInfo.companyName,\n\n      PROJECT_DIR: this.packager.projectDir,\n      BUILD_RESOURCES_DIR: this.packager.buildResourcesDir,\n    }\n\n    for (let [arch, file] of this.archs) {\n      defines[arch === Arch.x64 ? \"APP_64\" : \"APP_32\"] = await file\n    }\n\n    const oneClick = this.options.oneClick !== false\n\n    const installerHeader = oneClick ? null : await this.getResource(this.options.installerHeader, \"installerHeader.bmp\")\n    if (installerHeader != null) {\n      defines.MUI_HEADERIMAGE = null\n      defines.MUI_HEADERIMAGE_RIGHT = null\n      defines.MUI_HEADERIMAGE_BITMAP = installerHeader\n    }\n\n    const installerHeaderIcon = oneClick ? await this.getResource(this.options.installerHeaderIcon, \"installerHeaderIcon.ico\") : null\n    if (installerHeaderIcon != null) {\n      defines.HEADER_ICO = installerHeaderIcon\n    }\n\n    if (this.options.perMachine === true) {\n      defines.INSTALL_MODE_PER_ALL_USERS = null\n    }\n\n    if (!oneClick || this.options.perMachine === true) {\n      defines.INSTALL_MODE_PER_ALL_USERS_REQUIRED = null\n    }\n\n    if (oneClick) {\n      if (this.options.runAfterFinish !== false) {\n        defines.RUN_AFTER_FINISH = null\n      }\n    }\n    else if (this.options.allowElevation !== false) {\n      defines.MULTIUSER_INSTALLMODE_ALLOW_ELEVATION = null\n    }\n\n    // Error: invalid VIProductVersion format, should be X.X.X.X\n    // so, we must strip beta\n    const parsedVersion = new semver.SemVer(appInfo.version)\n    const localeId = this.options.language || \"1033\"\n    const versionKey = [\n      `/LANG=${localeId} ProductName \"${appInfo.productName}\"`,\n      `/LANG=${localeId} ProductVersion \"${appInfo.version}\"`,\n      `/LANG=${localeId} CompanyName \"${appInfo.companyName}\"`,\n      `/LANG=${localeId} LegalCopyright \"${appInfo.copyright}\"`,\n      `/LANG=${localeId} FileDescription \"${appInfo.description}\"`,\n      `/LANG=${localeId} FileVersion \"${appInfo.buildVersion}\"`,\n    ]\n    use(this.packager.platformSpecificBuildOptions.legalTrademarks, it => versionKey.push(`LegalTrademarks \"${it}\"`))\n\n    const commands: any = {\n      OutFile: `\"${installerPath}\"`,\n      VIProductVersion: `${parsedVersion.major}.${parsedVersion.minor}.${parsedVersion.patch}.${appInfo.buildNumber || \"0\"}`,\n      VIAddVersionKey: versionKey,\n    }\n\n    if (packager.devMetadata.build.compression === \"store\") {\n      commands.SetCompress = \"off\"\n      defines.COMPRESS = \"off\"\n    }\n    else {\n      commands.SetCompressor = \"lzma\"\n      // default is 8: test app installer size 37.2 vs 36 if dict size 64\n      commands.SetCompressorDictSize = \"64\"\n\n      defines.COMPRESS = \"auto\"\n    }\n\n    if (oneClick) {\n      defines.ONE_CLICK = null\n    }\n\n    debug(defines)\n    debug(commands)\n\n    if (this.packager.options.effectiveOptionComputed != null && this.packager.options.effectiveOptionComputed([defines, commands])) {\n      return\n    }\n\n    const customScriptPath = await this.getResource(this.options.script, \"installer.nsi\")\n    const script = await readFile(customScriptPath || path.join(this.nsisTemplatesDir, \"installer.nsi\"), \"utf8\")\n\n    if (customScriptPath == null) {\n      const uninstallerPath = await packager.getTempFile(\"uninstaller.exe\")\n      const isWin = process.platform === \"win32\"\n      defines.BUILD_UNINSTALLER = null\n      defines.UNINSTALLER_OUT_FILE = isWin ? uninstallerPath : path.win32.join(\"Z:\", uninstallerPath)\n      await subTask(`Executing makensis — uninstaller`, this.executeMakensis(defines, commands, false, script))\n      await exec(isWin ? installerPath : \"wine\", isWin ? [] : [installerPath])\n      await packager.sign(uninstallerPath)\n\n      delete defines.BUILD_UNINSTALLER\n      // platform-specific path, not wine\n      defines.UNINSTALLER_OUT_FILE = uninstallerPath\n    }\n    else {\n      log(\"Custom NSIS script is used - uninstaller is not signed by electron-builder\")\n    }\n\n    await subTask(`Executing makensis — installer`, this.executeMakensis(defines, commands, true, script))\n    await packager.sign(installerPath)\n\n    this.packager.dispatchArtifactCreated(installerPath, `${appInfo.name}-Setup-${version}.exe`)\n  }\n\n  protected async getResource(custom: string | n, name: string): Promise<string | null> {\n    let result = custom\n    if (result === undefined) {\n      const resourceList = await this.packager.resourceList\n      if (resourceList.includes(name)) {\n        return path.join(this.packager.buildResourcesDir, name)\n      }\n    }\n    else {\n      return path.resolve(this.packager.projectDir, result)\n    }\n\n    return null\n  }\n\n  private async executeMakensis(defines: any, commands: any, isInstaller: boolean, originalScript: string) {\n    const args: Array<string> = [\"-WX\"]\n    for (let name of Object.keys(defines)) {\n      const value = defines[name]\n      if (value == null) {\n        args.push(`-D${name}`)\n      }\n      else {\n        args.push(`-D${name}=${value}`)\n      }\n    }\n\n    for (let name of Object.keys(commands)) {\n      const value = commands[name]\n      if (Array.isArray(value)) {\n        for (let c of value) {\n          args.push(`-X${name} ${c}`)\n        }\n      }\n      else {\n        args.push(`-X${name} ${value}`)\n      }\n    }\n\n    args.push(\"-\")\n\n    const binDir = process.platform === \"darwin\" ? \"mac\" : (process.platform === \"win32\" ? \"Bin\" : \"linux\")\n    const nsisPath = await nsisPathPromise\n\n    let script = originalScript\n    const customInclude = await this.getResource(this.options.include, \"installer.nsh\")\n    if (customInclude != null) {\n      script = `!include \"${customInclude}\"\\n!addincludedir \"${this.packager.buildResourcesDir}\"\\n${script}`\n    }\n\n    if (this.fileAssociations.length !== 0) {\n      script = \"!include FileAssociation.nsh\\n\" + script\n      if (isInstaller) {\n        let registerFileAssociationsScript = \"\"\n        for (let item of this.fileAssociations) {\n          const customIcon = await this.getResource(item.icon, `${normalizeExt(item.ext)}.ico`)\n          let installedIconPath = \"${APP_EXECUTABLE_FILENAME},0\"\n          if (customIcon != null) {\n            installedIconPath = `resources\\\\${path.basename(customIcon)}`\n            //noinspection SpellCheckingInspection\n            registerFileAssociationsScript += `  File \"/oname=${installedIconPath}\" \"${customIcon}\"\\n`\n          }\n\n          const icon = `\"$INSTDIR\\\\${installedIconPath}\"`\n          const commandText = `\"Open with ${this.packager.appInfo.productName}\"`\n          const command = '\"$INSTDIR\\\\${APP_EXECUTABLE_FILENAME} $\\\\\"%1$\\\\\"\"'\n          registerFileAssociationsScript += `  !insertmacro APP_ASSOCIATE \"${normalizeExt(item.ext)}\" \"${item.name}\" \"${item.description || \"\"}\" ${icon} ${commandText} ${command}\\n`\n        }\n        script = `!macro registerFileAssociations\\n${registerFileAssociationsScript}!macroend\\n${script}`\n      }\n      else {\n        let unregisterFileAssociationsScript = \"\"\n        for (let item of this.fileAssociations) {\n          unregisterFileAssociationsScript += `  !insertmacro APP_UNASSOCIATE \"${normalizeExt(item.ext)}\" \"${item.name}\"\\n`\n        }\n        script = `!macro unregisterFileAssociations\\n${unregisterFileAssociationsScript}!macroend\\n${script}`\n      }\n    }\n\n    if (debug.enabled) {\n      process.stdout.write(\"\\n\\nNSIS script:\\n\\n\" + script + \"\\n\\n---\\nEnd of NSIS script.\\n\\n\")\n    }\n\n    await new BluebirdPromise<any>((resolve, reject) => {\n      const command = path.join(nsisPath, binDir, process.platform === \"win32\" ? \"makensis.exe\" : \"makensis\")\n      const childProcess = doSpawn(command, args, {\n        // we use NSIS_CONFIG_CONST_DATA_PATH=no to build makensis on Linux, but in any case it doesn't use stubs as MacOS/Windows version, so, we explicitly set NSISDIR\n        env: Object.assign({}, process.env, {NSISDIR: nsisPath}),\n        cwd: this.nsisTemplatesDir,\n      }, true)\n      handleProcess(\"close\", childProcess, command, resolve, reject)\n\n      childProcess.stdin.end(script)\n    })\n  }\n}\n\n// remove leading dot\nfunction normalizeExt(ext: string) {\n  return ext.startsWith(\".\") ? ext.substring(1) : ext\n}"
  ]
}
