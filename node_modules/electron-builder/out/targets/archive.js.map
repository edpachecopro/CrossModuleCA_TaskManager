{
  "version": 3,
  "file": "archive.js",
  "sourceRoot": "",
  "sources": [
    "../../src/targets/archive.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import { spawn, debug, debug7zArgs } from \"../util\"\nimport { CompressionLevel } from \"../metadata\"\nimport * as path from \"path\"\nimport { unlink } from \"fs-extra-p\"\nimport { path7za } from \"7zip-bin\"\n\n//noinspection JSUnusedLocalSymbols\nconst __awaiter = require(\"../awaiter\")\n\nclass CompressionDescriptor {\n  constructor(public flag: string, public env: string, public minLevel: string, public maxLevel: string = \"-9\") {\n  }\n}\n\nconst extToCompressionDescriptor: { [key: string]: CompressionDescriptor; } = {\n  \"tar.xz\": new CompressionDescriptor(\"--xz\", \"XZ_OPT\", \"-0\", \"-9e\"),\n  \"tar.lz\": new CompressionDescriptor(\"--lzip\", \"LZOP\", \"-0\"),\n  \"tar.gz\": new CompressionDescriptor(\"--gz\", \"GZIP\", \"-1\"),\n  \"tar.bz2\": new CompressionDescriptor(\"--bzip2\", \"BZIP2\", \"-1\"),\n}\n\nexport async function archiveApp(compression: CompressionLevel | n, format: string, outFile: string, dirToArchive: string): Promise<any> {\n  const storeOnly = compression === \"store\"\n\n  if (format.startsWith(\"tar.\")) {\n    // we don't use 7z here - develar: I spent a lot of time making pipe working - but it works on OS X and often hangs on Linux (even if use pipe-io lib)\n    // and in any case it is better to use system tools (in the light of docker - it is not problem for user because we provide complete docker image).\n    const info = extToCompressionDescriptor[format]\n    let tarEnv = process.env\n    if (compression != null && compression !== \"normal\") {\n      tarEnv = Object.assign({}, process.env)\n      tarEnv[info.env] = storeOnly ? info.minLevel : info.maxLevel\n    }\n\n    await spawn(process.platform === \"darwin\" || process.platform === \"freebsd\" ? \"gtar\" : \"tar\", [info.flag, \"--transform\", `s,^\\.,${path.basename(outFile, \".\" + format)},`, \"-cf\", outFile, \".\"], {\n      cwd: dirToArchive,\n      stdio: [\"ignore\", debug.enabled ? \"inherit\" : \"ignore\", \"inherit\"],\n      env: tarEnv\n    })\n    return\n  }\n\n  const args = debug7zArgs(\"a\")\n  if (compression === \"maximum\") {\n    if (format === \"7z\" || format.endsWith(\".7z\")) {\n      args.push(\"-mx=9\", \"-mfb=64\", \"-md=32m\", \"-ms=on\")\n    }\n    else if (format === \"zip\") {\n      // http://superuser.com/a/742034\n      //noinspection SpellCheckingInspection\n      args.push(\"-mfb=258\", \"-mpass=15\")\n    }\n    else {\n      args.push(\"-mx=9\")\n    }\n  }\n  else if (storeOnly) {\n    if (format !== \"zip\") {\n      args.push(\"-mx=1\")\n    }\n  }\n\n  // remove file before - 7z doesn't overwrite file, but update\n  try {\n    await unlink(outFile)\n  }\n  catch (e) {\n    // ignore\n  }\n\n  if (format === \"zip\" || storeOnly) {\n    args.push(\"-mm=\" + (storeOnly ? \"Copy\" : \"Deflate\"))\n  }\n\n  args.push(outFile, dirToArchive)\n\n  await spawn(path7za, args, {\n    cwd: path.dirname(dirToArchive),\n    stdio: [\"ignore\", debug.enabled ? \"inherit\" : \"ignore\", \"inherit\"],\n  })\n}"
  ]
}
