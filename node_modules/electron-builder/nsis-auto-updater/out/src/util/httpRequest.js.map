{"version":3,"file":"httpRequest.js","sourceRoot":"","sources":["../../../../src/util/httpRequest.ts"],"names":[],"mappings":"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","sourcesContent":["import { Socket } from \"net\"\nimport { IncomingMessage, ClientRequest } from \"http\"\nimport * as https from \"https\"\nimport { createWriteStream, ensureDir } from \"fs-extra-p\"\nimport { parse as parseUrl } from \"url\"\nimport { Promise as BluebirdPromise } from \"bluebird\"\nimport * as path from \"path\"\nimport { createHash } from \"crypto\"\nimport { Transform } from \"stream\"\n\nconst maxRedirects = 10\n\nexport interface DownloadOptions {\n  skipDirCreation?: boolean\n  sha2?: string\n}\n\nexport const download = <(url: string, destination: string, options?: DownloadOptions) => BluebirdPromise<any>>(BluebirdPromise.promisify(_download))\n\nfunction _download(url: string, destination: string, options: DownloadOptions | null | undefined, callback: (error: Error) => void): void {\n  if (callback == null) {\n    callback = <any>options\n    options = null\n  }\n  doDownload(url, destination, 0, options || {}, callback)\n}\n\nexport function addTimeOutHandler(request: ClientRequest, callback: (error: Error) => void) {\n  request.on(\"socket\", function (socket: Socket) {\n    socket.setTimeout(60 * 1000, () => {\n      callback(new Error(\"Request timed out\"))\n      request.abort()\n    })\n  })\n}\n\nfunction doDownload(url: string, destination: string, redirectCount: number, options: DownloadOptions, callback: (error: Error | null) => void) {\n  const ensureDirPromise = options.skipDirCreation ? BluebirdPromise.resolve() : ensureDir(path.dirname(destination))\n\n  const parsedUrl = parseUrl(url)\n  // user-agent must be specified, otherwise some host can return 401 unauthorised\n  const request = https.request({\n    hostname: parsedUrl.hostname,\n    path: parsedUrl.path,\n    headers: {\n      \"User-Agent\": \"electron-builder\"\n    }\n  }, (response: IncomingMessage) => {\n    if (response.statusCode >= 400) {\n      callback(new Error(`Cannot download \"${url}\", status ${response.statusCode}: ${response.statusMessage}`))\n      return\n    }\n\n    const redirectUrl = response.headers.location\n    if (redirectUrl != null) {\n      if (redirectCount < maxRedirects) {\n        doDownload(redirectUrl, destination, redirectCount++, options, callback)\n      }\n      else {\n        callback(new Error(\"Too many redirects (> \" + maxRedirects + \")\"))\n      }\n      return\n    }\n\n    const sha2Header = response.headers[\"X-Checksum-Sha2\"]\n    if (sha2Header != null && options.sha2 != null) {\n      // todo why bintray doesn't send this header always\n      if (sha2Header == null) {\n        throw new Error(\"checksum is required, but server response doesn't contain X-Checksum-Sha2 header\")\n      }\n      else if (sha2Header !== options.sha2) {\n        throw new Error(`checksum mismatch: expected ${options.sha2} but got ${sha2Header} (X-Checksum-Sha2 header)`)\n      }\n    }\n\n    ensureDirPromise\n      .then(() => {\n        const fileOut = createWriteStream(destination)\n        if (options.sha2 == null) {\n          response.pipe(fileOut)\n        }\n        else {\n          response\n            .pipe(new DigestTransform(options.sha2))\n            .pipe(fileOut)\n        }\n\n        fileOut.on(\"finish\", callback)\n      })\n      .catch(callback)\n\n    let ended = false\n    response.on(\"end\", () => {\n      ended = true\n    })\n\n    response.on(\"close\", () => {\n      if (!ended) {\n        callback(new Error(\"Request aborted\"))\n      }\n    })\n  })\n  addTimeOutHandler(request, callback)\n  request.on(\"error\", callback)\n  request.end()\n}\n\nclass DigestTransform extends Transform {\n  readonly digester = createHash(\"sha256\")\n\n  constructor(private expected: string) {\n   super()\n  }\n\n  _transform(chunk: any, encoding: string, callback: Function) {\n    this.digester.update(chunk)\n    callback(null, chunk)\n  }\n\n  _flush(callback: Function): void {\n    const hash = this.digester.digest(\"hex\")\n    callback(hash === this.expected ? null : new Error(`SHA2 checksum mismatch, expected ${this.expected}, got ${hash}`))\n  }\n}"]}